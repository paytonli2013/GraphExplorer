<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:gxl="clr-namespace:GraphX;assembly=GraphX"
    xmlns:conv="clr-namespace:GraphX.Converters;assembly=GraphX">

    <LinearGradientBrush x:Key="NormalBrush">
        <GradientStop Color="#FFECEBF5" Offset="0"/>
        <GradientStop Color="#FFE5E4EB" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NormalForegroudBrush" Color="#FF313636"/>
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#FFC9D1D1"/>
    <BitmapImage x:Key="ImageSource" UriSource="appbar.people.png" />
    <LinearGradientBrush x:Key="MouseOverBrush">
        <GradientStop Color="#FFE9ED9F" Offset="0" />
        <GradientStop Color="#FFE8ED8E" Offset="1" />
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="MouseOverBorderBrush" Color="Gold"/>
    
    <!-- VERTEX CONTROL -->
    <Style TargetType="{x:Type gxl:VertexControl}">
        <!-- Set background color through attached property -->
        <Setter Property="Background" Value="{StaticResource NormalBrush}"/>     
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource NormalForegroudBrush}"/>
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Margin" Value="2"/>
        <Setter Property="MinHeight" Value="120"/>
        <Setter Property="MinWidth" Value="180"/>
        <Setter Property="Template">
			<Setter.Value>
                <ControlTemplate TargetType="{x:Type gxl:VertexControl}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Highlight">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="DropShadowEffect" Storyboard.TargetProperty="Opacity" To=".5" />
                            <DoubleAnimation Duration="00:00:00.2000000" Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.1" />
                            
                            <DoubleAnimation Duration="00:00:00.2000000" Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.1" />
                        </Storyboard>
                        <Storyboard x:Key="HighlightOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="DropShadowEffect" Storyboard.TargetProperty="Opacity" To=".2" />
<DoubleAnimation Duration="00:00:00.2000000" Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" />
                            <DoubleAnimation Duration="00:00:00.2000000" Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="DropShadowEffect" Storyboard.TargetProperty="Opacity" To=".5" />

                            <DoubleAnimation Duration="00:00:00.2000000" Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.2" />
                            <DoubleAnimation Duration="00:00:00.2000000" Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.2" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="DropShadowEffect" Storyboard.TargetProperty="Opacity" To=".2" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" />
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="root" Margin="{TemplateBinding Padding}" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}">
                        <Grid.RenderTransform>
                            <ScaleTransform/>
                        </Grid.RenderTransform>
                        <Border x:Name="BackgroundNorm" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Border.Effect>
                                <DropShadowEffect x:Name="DropShadowEffect" Color="Gray" Direction="315" Opacity=".2" RenderingBias="Performance" ShadowDepth="3"/>
                            </Border.Effect>
                        </Border>
                        
                        <Border x:Name="BackgroundOver" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" Background="{DynamicResource MouseOverBrush}" BorderBrush="{DynamicResource MouseOverBorderBrush}"/>

                        <Grid UseLayoutRounding="True" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border Margin="10"  Width="32" Height="32" BorderThickness="1" BorderBrush="{StaticResource NormalBorderBrush}">
                                <Image Source="{Binding Icon,TargetNullValue={StaticResource ImageSource}}" Stretch="UniformToFill" />
                            </Border>
                            <TextBlock Text="{Binding Title}" VerticalAlignment="Center" FontWeight="Bold" Foreground="Black" Grid.Column="1" Grid.Row="0" Margin="3" MinWidth="120"/>
                           
                            <ItemsControl VerticalAlignment="Top" Margin="6" Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding Properties}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" MinWidth="100"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock HorizontalAlignment="Left" Text="{Binding Key,StringFormat=' {0}: '}"></TextBlock>
                                            <TextBlock Text="{Binding Value}" Grid.Column="1"></TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="gxl:HighlightBehaviour.Highlighted" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Highlight}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                 <BeginStoryboard Storyboard="{StaticResource HighlightOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>                
			</Setter.Value>
		</Setter>

        <!--<Setter Property="ToolTip">            
            <Setter.Value>
                <Border BorderBrush="Black" BorderThickness="2" CornerRadius="8" Background="{StaticResource NormalBrush}" UseLayoutRounding="True">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Additional person info:" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" FontWeight="Bold"/>
                        <StackPanel Orientation="Horizontal" Margin="3">
                            <TextBlock MinWidth="70" Text="Name: " VerticalAlignment="Center"/>
                            <TextBlock FontWeight="Bold" Text="{Binding Name}" Margin="3" VerticalAlignment="Center"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="3">
                            <TextBlock MinWidth="70" Text="Occupation: " VerticalAlignment="Center"/>
                            <TextBlock FontWeight="Bold" Text="{Binding Profession}" Margin="3" VerticalAlignment="Center"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="3">
                            <TextBlock MinWidth="70" Text="Age: " VerticalAlignment="Center"/>
                            <TextBlock FontWeight="Bold" Text="{Binding Age}" Margin="3" VerticalAlignment="Center"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="3">
                            <TextBlock MinWidth="70" Text="Gender: " VerticalAlignment="Center"/>
                            <TextBlock FontWeight="Bold" Text="{Binding Gender}" Margin="3" VerticalAlignment="Center"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Setter.Value>
        </Setter>-->

        <!-- VERTEX DRAGGING CONTROL -->
        <Setter Property="gxl:DragBehaviour.IsDragEnabled"
                Value="True" />
        <Setter Property="gxl:DragBehaviour.UpdateEdgesOnMove"
                Value="True" />

        <Setter Property="gxl:HighlightBehaviour.IsHighlightEnabled"
                Value="True" />
        <Setter Property="gxl:HighlightBehaviour.HighlightControl"
                Value="VertexAndEdge" />
        <Setter Property="gxl:HighlightBehaviour.HighlightEdges" 
                Value="All"/>
      
        <Style.Triggers>
            <Trigger Property="gxl:HighlightBehaviour.Highlighted" Value="True">
                <Setter Property="BorderBrush" Value="Gold"/>
            </Trigger>
            <Trigger Property="gxl:HighlightBehaviour.Highlighted" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
        
    </Style>

    
    <!--                           StrokeDashArray="{Binding Path=Edge, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource dconv}}" -->
    <!-- EDGE CONTROL -->
	<Style TargetType="{x:Type gxl:EdgeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type gxl:EdgeControl}">
                    <Grid>
                        <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="2" MinWidth="1" MinHeight="1"
                          ToolTip="{TemplateBinding ToolTip}"
                          x:Name="PART_edgePath"/>
                        <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="2" MinWidth="1" MinHeight="1" 
                            x:Name="PART_edgeArrowPath"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth"
                Value="1" />
        <Setter Property="MinHeight"
                Value="1" />
        <Setter Property="Background"
                Value="Red" />
        <Setter Property="Foreground"
                Value="Gray" />
        <Setter Property="Opacity"
                Value="1" />

        <!--<Setter Property="ToolTip">
            <Setter.Value>
                <Border BorderBrush="Black" BorderThickness="2" CornerRadius="2" Background="{StaticResource NormalBrush}" UseLayoutRounding="True">
                    <StackPanel Orientation="Vertical" Margin="2">
                        <TextBlock FontWeight="Bold" Text="Solid link: " Margin="3"/>
                        <TextBlock FontWeight="Bold" Foreground="LightGreen" Text="{Binding ToolTipText}" Margin="3"/>
                    </StackPanel>
                </Border>
            </Setter.Value>
        </Setter>-->
        
        <Setter Property="gxl:HighlightBehaviour.IsHighlightEnabled"
                Value="True" />
        <Setter Property="gxl:HighlightBehaviour.HighlightControl"
                Value="VertexAndEdge" />
        <Setter Property="gxl:HighlightBehaviour.HighlightEdges" 
                Value="All"/>
        
        <Style.Triggers>
            <Trigger Property="gxl:HighlightBehaviour.Highlighted" Value="True">
                <Setter Property="Foreground" Value="Gold"/>
                <Setter Property="StrokeThickness" Value="3"/>
            </Trigger>
        </Style.Triggers>
    </Style>
	
</ResourceDictionary>